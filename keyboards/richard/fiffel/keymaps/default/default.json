{
  "version": 1,
  "notes": "",
  "documentation": "\"This file is a QMK Configurator export. You can import this at <https://config.qmk.fm>. It can also be used directly with QMK's source code.\n\nTo setup your QMK environment check out the tutorial: <https://docs.qmk.fm/#/newbs>\n\nYou can convert this file to a keymap.c using this command: `qmk json2c {keymap}`\n\nYou can compile this keymap using this command: `qmk compile {keymap}`\"\n",
  "keyboard": "splitkb/aurora/corne/rev1",
  "keymap": "splitkb_aurora_corne_rev1_layout_split_3x6_3_mine",
  "layout": "LAYOUT_split_3x6_3",
  "layers": [
    [
      "KC_F3",
      "KC_Q",
      "KC_W",
      "KC_F",
      "KC_P",
      "KC_G",
      "KC_J",
      "KC_L",
      "KC_U",
      "KC_U",
      "KC_Y",
      "KC_SCLN",
      "LT(2,KC_ESC)",
      "KC_A",
      "KC_R",
      "KC_S",
      "KC_S",
      "KC_T",
      "KC_H",
      "KC_N",
      "KC_E",
      "KC_I",
      "KC_O",
      "KC_QUOT",
      "KC_LSFT",
      "KC_Z",
      "KC_X",
      "KC_C",
      "KC_V",
      "KC_B",
      "KC_K",
      "KC_M",
      "KC_COMM",
      "KC_DOT",
      "KC_PSLS",
      "KC_RSFT",
      "LT(3,KC_NO)",
      "KC_BSPC",
      "LCTL_T(KC_TAB)",
      "KC_ENT",
      "KC_SPC",
      "LT(3,KC_NO)"
    ],
    [
      "KC_NO",
      "LALT(KC_7)",
      "LALT(KC_2)",
      "LSFT(KC_6)",
      "LSA(KC_7)",
      "LALT(KC_RBRC)",
      "KC_PPLS",
      "KC_7",
      "KC_8",
      "KC_9",
      "LALT(KC_8)",
      "LALT(KC_9)",
      "LCTL(KC_A)",
      "KC_EXLM",
      "LSFT(KC_2)",
      "KC_HASH",
      "LALT(KC_4)",
      "LSFT(KC_5)",
      "KC_PEQL",
      "KC_4",
      "KC_5",
      "KC_6",
      "LSFT(KC_8)",
      "LSFT(KC_9)",
      "KC_NO",
      "KC_PLUS",
      "KC_GRV",
      "KC_TILD",
      "KC_SLSH",
      "LSFT(KC_SLSH)",
      "KC_PIPE",
      "KC_1",
      "KC_2",
      "KC_3",
      "RSA(KC_8)",
      "RSA(KC_9)",
      "KC_NO",
      "KC_LEFT",
      "KC_RGHT",
      "KC_DOWN",
      "KC_UP",
      "KC_0"
    ],
    [
      "KC_NO",
      "KC_MPRV",
      "KC_VOLD",
      "KC_MPLY",
      "KC_VOLU",
      "KC_MNXT",
      "KC_UP",
      "KC_RGHT",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_LEFT",
      "LALT(KC_LEFT)",
      "KC_NO",
      "LALT(KC_RGHT)",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_DOWN",
      "LSA(KC_LEFT)",
      "KC_NO",
      "LSA(KC_RGHT)",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO"
    ],
    [
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "LCTL(KC_J)",
      "LCTL(KC_L)",
      "LAG(KC_U)",
      "LAG(KC_Y)",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "LALT(KC_U)",
      "LALT(KC_ENT)",
      "LALT(KC_SPC)",
      "LALT(KC_D)",
      "KC_NO",
      "LCTL(KC_H)",
      "LAG(KC_N)",
      "LAG(KC_E)",
      "LAG(KC_I)",
      "LAG(KC_NO)",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "LGUI(KC_K)",
      "LCTL(KC_K)",
      "LAG(KC_1)",
      "LAG(KC_2)",
      "LAG(KC_3)",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "KC_NO",
      "LAG(KC_SPC)",
      "KC_NO"
    ]
  ],
  "author": ""
}